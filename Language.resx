<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ACTIVATE_SCHEMA" xml:space="preserve">
    <value>Info;Schema is active</value>
  </data>
  <data name="CANNOT_EMBED_CODES" xml:space="preserve">
    <value>Error;Cannot embed short codes within short codes</value>
  </data>
  <data name="CHECK_PASSWORD" xml:space="preserve">
    <value>Info;Checking password strength [{0}]</value>
  </data>
  <data name="COLUMN_FOUND" xml:space="preserve">
    <value>Info;Column found</value>
  </data>
  <data name="COLUMN_NOT_FOUND" xml:space="preserve">
    <value>Error;Column not found</value>
  </data>
  <data name="CONTINUOUS_DATASET" xml:space="preserve">
    <value>Info;DATASET, continuous display mode, filtered on [{0}] &gt;&gt;</value>
  </data>
  <data name="CONTINUOUS_PREDICTION" xml:space="preserve">
    <value>Info;PREDICTION, continuous display mode, filtered on [{0}] &gt;&gt;&gt;</value>
  </data>
  <data name="CONTINUOUS_SUBSCRIPTION" xml:space="preserve">
    <value>Info;SUBSCRIPTION, continuous display mode, filtered on [{0}] &gt;</value>
  </data>
  <data name="DATASET_EMPTIED" xml:space="preserve">
    <value>Info;Dataset emptied</value>
  </data>
  <data name="DATASET_FOUND" xml:space="preserve">
    <value>Info;Dataset was found</value>
  </data>
  <data name="DATASET_LINES" xml:space="preserve">
    <value>Info;Dataset contains {0} lines</value>
  </data>
  <data name="DATASET_NOLINES" xml:space="preserve">
    <value>Error;Dataset empty</value>
  </data>
  <data name="ENCRYPTING_SETTINGS" xml:space="preserve">
    <value>Info;Encrypting settings file</value>
  </data>
  <data name="END_CAPTURE" xml:space="preserve">
    <value>Error;You must end capturing of data first</value>
  </data>
  <data name="FOUND" xml:space="preserve">
    <value>Info;Key {0} found</value>
  </data>
  <data name="GET_PASSWORD" xml:space="preserve">
    <value>Info;Loading {0} and source {1},\nenter authentication password to confirm\nPassword:</value>
  </data>
  <data name="HELP" xml:space="preserve">
    <value>Info;Type 'help', '/?' or '/? search' for available commands</value>
  </data>
  <data name="INACTIVATE_SCHEMA" xml:space="preserve">
    <value>Info;Schema has been made not active</value>
  </data>
  <data name="INVALID_EPIC" xml:space="preserve">
    <value>Error;That epic code does not belong to the currently loaded schema</value>
  </data>
  <data name="INVALID_PARAMETERS" xml:space="preserve">
    <value>Error;Invalid parameters</value>
  </data>
  <data name="INVALID_TIMEDIFF" xml:space="preserve">
    <value>Error;Invalid time difference [{0} seconds]</value>
  </data>
  <data name="MISSING_ARGS" xml:space="preserve">
    <value>Error;IGSB.Program ERROR: Missing some or all command line arguments\nss = Map to source key in settings file (mandatory i.e. Demo, Live), case sensitive\nwf = Name of watch file to use (mandatory)\nst = Settings file name (optional, defaults to settings.json)\ncp = Password to use for encrypting settings file (optional, but will be prompted if not supplied)</value>
  </data>
  <data name="NEED_TO_RESTART" xml:space="preserve">
    <value>Error;Data capture is currently on pause, you need to 'begin' first</value>
  </data>
  <data name="NOTFOUND" xml:space="preserve">
    <value>Error;Key {0} not found</value>
  </data>
  <data name="NO_AUTHENTICATION" xml:space="preserve">
    <value>Info;Unable to authenticate and start</value>
  </data>
  <data name="NO_DATASET" xml:space="preserve">
    <value>Error;No dataset found</value>
  </data>
  <data name="NO_LOGFILE" xml:space="preserve">
    <value>Error;No log file found</value>
  </data>
  <data name="NO_MODEL" xml:space="preserve">
    <value>Error;No model found</value>
  </data>
  <data name="NO_MODEL_FOUND" xml:space="preserve">
    <value>Error;No model found or cannot overwrite existing model</value>
  </data>
  <data name="NO_SCHEMA" xml:space="preserve">
    <value>Error;Schema not found</value>
  </data>
  <data name="NO_SCHEMA_FOUND" xml:space="preserve">
    <value>Error;No schema found or cannot overwrite existing dataset</value>
  </data>
  <data name="PARAMETERS_OK" xml:space="preserve">
    <value>Info;Settings parameters ok</value>
  </data>
  <data name="PASSWORD_CHANGED" xml:space="preserve">
    <value>Info;Password changed NB* You must now change the password you use to login</value>
  </data>
  <data name="PASSWORD_FAILED" xml:space="preserve">
    <value>Error;Password failed</value>
  </data>
  <data name="PASSWORD_NOT_CHANGED" xml:space="preserve">
    <value>Error;Unable to change password</value>
  </data>
  <data name="RELOAD_WATCH" xml:space="preserve">
    <value>Error;You must reload watch file to see changes</value>
  </data>
  <data name="RESERVED_SHORTCODE" xml:space="preserve">
    <value>Error;Reserved shortcode, you cannot assign anything to that code</value>
  </data>
  <data name="SCHEMA_ALREADY_ACTIVE" xml:space="preserve">
    <value>Error;Schema is already active</value>
  </data>
  <data name="SCHEMA_ALREADY_INACTIVE" xml:space="preserve">
    <value>Error;Schema is already inactive</value>
  </data>
  <data name="START" xml:space="preserve">
    <value>Info;Type 'begin' or '/bc' to begin collecting data</value>
  </data>
  <data name="UNKNOWN" xml:space="preserve">
    <value>Error;Unknown command, /? for help</value>
  </data>
  <data name="WEAK_PASSWORD" xml:space="preserve">
    <value>Error;A weak password has been supplied</value>
  </data>
  <data name="WRONG_SPEED" xml:space="preserve">
    <value>Error;Speed should be less than or equal to 100 and more than 0</value>
  </data>
</root>